@model Resume.Models.Position

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Position</h4>
	<hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Company)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Company)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

    </dl>
</div>
<ul data-bind=" foreach: responsibilities">
    <li>
        <h3 data-bind="text: Name"></h3>
        <p data-bind="text: Description"></p>
    </li>
</ul>
<form data-bind="submit: addResponsibility">
    <div class="form-horizontal well">
        <fieldset>
            <legend>Add Responsibility</legend>
            <div class="form-group">
                <div class="col-md-4">
                    <span class="control-label">Experience</span>
                    <input type="text" class="form-control" name="name" data-bind="value: newResponsibility.Name" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    <span class="control-label">Description</span>
                    <textarea class="form-control" rows="3" name="description" data-bind="value: newResponsibility.Description"></textarea>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Add</button>
        </fieldset>
    </div>
</form>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<pre data-bind="text: debugJson"></pre>


@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/knockout")
        @Scripts.Render("~/Scripts/models/responsibility.js")
        <script>
    function PositionViewModel() {
        var self = this;

        self.responsibilities = ko.observableArray([]);

        self.newResponsibility = ko.observable(new Responsibility({ Name: "", Description: "", PositionId: @Model.Id }));

        self.debugJson = ko.observable();

        var positionData = $.getJSON("/api/position/@Model.Id/responsibilities", function (data) {
                    //DO STUFF WITH DATA
                    var mapped = $.map(data, function (item) { return new Responsibility(item) });
                    self.responsibilities(mapped);
                });

        self.addResponsibility = function (element) {
            self.newResponsibility().Name(element.name.value);
            self.newResponsibility().Description(element.description.value);
            this.debugJson(ko.toJSON(self.newResponsibility));
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    url: "/api/Responsibility",
                    data: ko.toJSON(self.newResponsibility),
                    success: function (data) {
                        self.newResponsibility.Name("taco");
                        self.newResponsibility.Description("");
                    },
                    error: function (error) {
                        jsonValue = jQuery.parseJSON(error.responseText);
                        //jError('An error has occurred while saving the new part source: ' + jsonValue, { TimeShown: 3000 });
                    }
                });

                    self.responsibilities.push(new Responsibility(self.newResponsibility));
                    self.newResponsibility(new Responsibility({ Name: "", Description: "", PositionId: @Model.Id }));
        };

        self.updateResponsibility = function (item) {
            //TODO: Find the updated item and updated it.
        }
    }

    ko.applyBindings(new PositionViewModel());
        </script>
}
