@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Joshua Slaven</h1>
    <p>Programmer, problem solver, all around solid dude.</p>
</div>

<div class="row">
    <div class="col-md-6">
        <div id="responsibilities">
            <ul data-bind="foreach: positions">
                <li>
                    <h3 data-bind="text: Title"></h3>
                    <p data-bind="text: Company"></p>
                    <p data-bind="text: Description"></p>
                </li>
            </ul>
        </div>
    </div>
    <div class="col-md-6">
        <div id="skillChart" style="margin: 0 auto; overflow:visible" ></div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div id="positionSKills"></div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/highcharts")

    @Scripts.Render("~/Scripts/models/position.js")
    <script type="text/javascript">
        $(function () {
            //View model binding for positions
            var view_model = {
                positions: kb.collectionObservable(new Positions)
            };

            ko.applyBindings(view_model, $('#responsibilities')[0]);

            var skills;

            //unique skills
            $.get("/api/skill?$filter=HasExperience%20eq%20true", function (data) {
                skills = data;
            }, "json")

            $.ajax({
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: "/api/position",
                success: function (positions) {

                    while (!skills) {
                        debugger;
                    }
                    
                    var series = [];
                    _.each(positions, function (position, index, list) {
                        var responsibilites = position.Responsibilities;
                        var experiences = _(responsibilites).map(function (responsibility) { return responsibility.Experiences; });
                        var flatExperiences = _.flatten(experiences);
                        var experiencesBySkill = _.groupBy(flatExperiences, function (experience) { return experience.SkillId; })
                        var positionSkillSummary = _.map(experiencesBySkill, function (expGroup) {
                            var skillSummary = _.reduce(expGroup, function (memo, experience) {
                                //Sum skill group values
                                memo.Value = memo.Value + experience.Value
                                return memo;
                            });
                            return skillSummary;
                        });

                        var mappedSkillSummary = [];
                        _.each(skills, function (skill) {
                            var skillValue = _.find(positionSkillSummary, function (summary) { return skill.SkillId == summary.SkillId });
                            if (skillValue)
                                mappedSkillSummary.push(skillValue.Value);
                            else
                                mappedSkillSummary.push(null);
                        })

                        series.push({
                            name: position.Title,
                            data: mappedSkillSummary
                            })
                    });

                    debugger;

                    $('#positionSKills').highcharts({
                        chart: {
                            type: 'column',
                            spacingBottom: 50
                        },
                        title: {
                            text: 'Experience by Position'
                        },
                        xAxis: {
                            categories: _(skills).pluck("Name")
                        },
                        yAxis: {
                            min: 0,
                            title: {
                                text: 'Experience'
                            },
                            stackLabels: {
                                enabled: true,
                                style: {
                                    fontWeight: 'bold',
                                    color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                                }
                            }
                        },
                        legend: {
                            align: 'left',
                            x: 70,
                            verticalAlign: 'bottom',
                            y: 40,
                            floating: true,
                            backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                            borderColor: '#CCC',
                            borderWidth: 1,
                            shadow: false
                        },
                        tooltip: {
                            formatter: function () {
                                return '<b>' + this.x + '</b><br/>' +
                                    this.series.name + ': ' + this.y + '<br/>' +
                                    'Total: ' + this.point.stackTotal;
                            }
                        },
                        plotOptions: {
                            column: {
                                stacking: 'normal',
                                dataLabels: {
                                    enabled: true,
                                    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                                    style: {
                                        textShadow: '0 0 3px black, 0 0 3px black'
                                    }
                                }
                            }
                        },
                        series: series
                    });
                },
                error: function (error) {
                    jsonValue = jQuery.parseJSON(error.responseText);
                    //jError('An error has occurred while saving the new part source: ' + jsonValue, { TimeShown: 3000 });
                }
            });


            $.ajax({
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: "/api/skill?$orderby=Level desc",
                success: function (data) {
                    var categores = _.pluck(data, 'Name');
                    var values = _.pluck(data, 'Level');
                    
                    //Skill column chart
                    var chart = $('#skillChart').highcharts({
                        chart: {
                            type: 'bar'
                        },
                        title: {
                            text: 'Skills'
                        },
                        xAxis: {
                            categories: categores
                        },
                        yAxis: {
                            min: 0,
                            max: 100,
                            title: {
                                text: 'Skill Level'
                            },
                            stackLabels: {
                                enabled: true,
                                style: {
                                    fontWeight: 'bold',
                                    color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                                }
                            }
                        },
                        legend: {
                            enabled: false
                        },
                        tooltip: {
                            formatter: function () {
                                return '<b>' + this.x + '</b><br/>' +
                                    this.series.name + ': ' + this.y + '<br/>' +
                                    'Total: ' + this.point.stackTotal;
                            }
                        },
                        plotOptions: {
                            series: {
                                color: '#666666'
                            },
                            column: {
                                stacking: 'normal',
                                dataLabels: {
                                    enabled: true,
                                    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                                    style: {
                                        textShadow: '0 0 3px black, 0 0 3px black'
                                    }
                                }
                            }
                        },
                        series: [{
                            name: 'Skills',
                            data: values
                        }]
                    });
                },
                error: function (error) {
                    jsonValue = jQuery.parseJSON(error.responseText);
                    //jError('An error has occurred while saving the new part source: ' + jsonValue, { TimeShown: 3000 });
                }
            });
        });
    </script>
}