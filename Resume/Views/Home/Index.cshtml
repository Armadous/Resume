@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Joshua Slaven</h1>
    <p>Programmer, problem solver, general neusence to database administrators.</p>
</div>

<div class="row">
    <div class="col-md-6">
        <div id="responsibilities">
            <ul data-bind="foreach: positions">
                <li>
                    <h3 data-bind="text: Title"></h3>
                    <p data-bind="text: Company"></p>
                    <p data-bind="text: Description"></p>
                </li>
            </ul>
        </div>
    </div>
    <div class="col-md-6">
        <div id="skillChart" style="margin: 0 auto; overflow:visible" ></div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div id="positionSKills"></div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/highcharts")

    @Scripts.Render("~/Scripts/models/position.js")
    <script type="text/javascript">
        $(function () {
            //View model binding for positions
            var pos_view_model = {
                positions: kb.collectionObservable(new Positions)
            };

            ko.applyBindings(pos_view_model, $('#responsibilities')[0]);

            $.ajax({
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: "/api/experience",
                success: function (data) {

                    var uniqueSkills = _.chain(data)
                        .map(function (experience) { return experience.Skill })
                        .uniq(function (item, key, a) { return item.Name })
                        .value();

                    //create series
                    var positionSkills = _.map(pos_view_model.positions(), function (position) {
                        return {
                            Title: position.Title(),
                            PositionId: position.PositionId(),
                            Experiences: _.map(uniqueSkills, function (skill) {  })
                        }
                    });

                    debugger;

                    $('#positionSKills').highcharts({
                        chart: {
                            type: 'column'
                        },
                        title: {
                            text: 'Stacked column chart'
                        },
                        xAxis: {
                            categories: _(uniqueSkills).pluck("Name")
                        },
                        yAxis: {
                            min: 0,
                            title: {
                                text: 'Total fruit consumption'
                            },
                            stackLabels: {
                                enabled: true,
                                style: {
                                    fontWeight: 'bold',
                                    color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                                }
                            }
                        },
                        legend: {
                            align: 'right',
                            x: -70,
                            verticalAlign: 'top',
                            y: 20,
                            floating: true,
                            backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                            borderColor: '#CCC',
                            borderWidth: 1,
                            shadow: false
                        },
                        tooltip: {
                            formatter: function () {
                                return '<b>' + this.x + '</b><br/>' +
                                    this.series.name + ': ' + this.y + '<br/>' +
                                    'Total: ' + this.point.stackTotal;
                            }
                        },
                        plotOptions: {
                            column: {
                                stacking: 'normal',
                                dataLabels: {
                                    enabled: true,
                                    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                                    style: {
                                        textShadow: '0 0 3px black, 0 0 3px black'
                                    }
                                }
                            }
                        },
                        series: [{
                            name: 'Programmer Analyst',
                            data: [5, 3, 4, 7, 2]
                        }, {
                            name: 'Web Developer',
                            data: [2, 2, 3, 2, 1, 5]
                        }, {
                            name: 'IT Support - Lab Assistant',
                            data: [3, 4, 4, 2, 5]
                        }]
                    });
                },
                error: function (error) {
                    jsonValue = jQuery.parseJSON(error.responseText);
                    //jError('An error has occurred while saving the new part source: ' + jsonValue, { TimeShown: 3000 });
                }
            });


            $.ajax({
                type: "GET",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: "/api/skill?$orderby=Level desc",
                success: function (data) {
                    var categores = _.pluck(data, 'Name');
                    var values = _.pluck(data, 'Level');
                    
                    //Skill column chart
                    var chart = $('#skillChart').highcharts({
                        chart: {
                            type: 'column'
                        },
                        title: {
                            text: 'Skills'
                        },
                        xAxis: {
                            categories: categores
                        },
                        yAxis: {
                            min: 0,
                            max: 100,
                            title: {
                                text: 'Skill Level'
                            },
                            stackLabels: {
                                enabled: true,
                                style: {
                                    fontWeight: 'bold',
                                    color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                                }
                            }
                        },
                        legend: {
                            enabled: false
                        },
                        tooltip: {
                            formatter: function () {
                                return '<b>' + this.x + '</b><br/>' +
                                    this.series.name + ': ' + this.y + '<br/>' +
                                    'Total: ' + this.point.stackTotal;
                            }
                        },
                        plotOptions: {
                            series: {
                                color: '#666666'
                            },
                            column: {
                                stacking: 'normal',
                                dataLabels: {
                                    enabled: true,
                                    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                                    style: {
                                        textShadow: '0 0 3px black, 0 0 3px black'
                                    }
                                }
                            }
                        },
                        series: [{
                            name: 'Skills',
                            data: values
                        }]
                    });
                },
                error: function (error) {
                    jsonValue = jQuery.parseJSON(error.responseText);
                    //jError('An error has occurred while saving the new part source: ' + jsonValue, { TimeShown: 3000 });
                }
            });
        });
    </script>
}